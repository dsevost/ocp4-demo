---
- include: ../../common/tasks/oc_adm.yaml

#- name: "Get remote user home directoty"
#  user:
#    name: "{{ ansible_user }}"
#    state: present
#  register: user_info
#
#- set_fact:
#    oc_adm: "{{ oc_cmd }} --kubeconfig {{ user_info.home }}/{{ openshift_cluster_name }}/auth/kubeconfig"
#
- name: "Copy templates to master"
  copy:
    src: "{{ item }}"
    dest: /tmp
  with_items:
  - cluster-wide.yaml
  - nfs-client-provosioner.yaml

- name: "Create NFS Client Based Provisioner Project"
  shell: |
    {{ oc_adm }} project {{ nfs_provisioner_project }} || \
    {{ oc_adm }} new-project {{ nfs_provisioner_project }}

- name: "Upload templates"
  shell: |
    {{ oc_adm }} -n {{ nfs_provisioner_project }} create -f /tmp/{{ item }} || \
    {{ oc_adm }} -n {{ nfs_provisioner_project }} replace -f /tmp/{{ item }}
  with_items:
  - cluster-wide.yaml
  - nfs-client-provosioner.yaml

- name: "Create Clutser wide objects"
  shell: |
    {{ oc_adm }} process nfs-client-provisioner-cluster-wide -p NAMESPACE={{ nfs_provisioner_project }} -p STORAGE_CLASS_NAME={{ storage_class_name }} \
    | {{ oc_adm }} apply -f -

- name: "Create NFS Provisioner Microservice"
  shell: |
    {{ oc_adm }} process nfs-client-provisioner -p NFS_SERVER={{ nfs_server }} \
    | {{ oc_adm }} apply -f -

- name: "Allow hostmount SCC for service account"
  shell: |
    {{ oc_adm }} adm policy add-scc-to-user hostmount-anyuid -z nfs-client-provisioner

- name: "Make just creates storage class as 'default'"
  shell: |
    {{ oc_adm }} annotate sc {{ storage_class_name }} "storageclass.kubernetes.io/is-default-class=true"
  when:
  - default_storage_class
